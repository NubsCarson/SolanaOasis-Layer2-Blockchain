name: 🌙 Mystical Rust Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Define mystical permissions for the digital realm
permissions:
  actions: read
  contents: read
  security-events: write
  pull-requests: write
  packages: write

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  ROCKSDB_LIB_DIR: /usr/lib/x86_64-linux-gnu
  ROCKSDB_STATIC: 1
  RUSTFLAGS: "-C target-cpu=native"

jobs:
  summoning:
    name: 🕯️ Summon and Test the Digital Essence
    runs-on: ubuntu-latest

    steps:
    # Pin actions to specific versions for security
    - name: 🌒 Channel the Repository
      uses: actions/checkout@v4

    - name: ⚔️ Install Mystical Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y librocksdb-dev clang

    - name: ⛧ Invoke Rust
      uses: dtolnay/rust-toolchain@b44d808b66d1b4506d4fff71c0a670317e8d66c5
      with:
        toolchain: stable
        components: clippy, rustfmt

    - name: 🌌 Summon Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: 📓 Cache Ancient Knowledge
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: 🔍 Verify Sacred Format
      run: cargo fmt -- --check

    - name: 🕯️ Invoke Clippy's Wisdom
      run: cargo clippy -- -D warnings

    - name: ⚡ Forge the Artifacts
      run: cargo build --verbose

    - name: 🗝️ Perform the Test Rituals
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
        ./tests/run_local_tests.sh

    - name: 🌌 Channel to the Package Repository
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        # Configure GitHub registry
        mkdir -p ~/.cargo
        cat >> ~/.cargo/config.toml << EOF
        [registries.github]
        index = "sparse+https://github.com/NubsCarson/SolanaOasis-Layer2.git/"
        registry = "https://api.github.com/orgs/NubsCarson/packages"
        EOF
        
        # Set up credentials
        cat >> ~/.cargo/credentials.toml << EOF
        [registries.github]
        token = "${CARGO_REGISTRY_TOKEN}"
        EOF
        
        # Publish packages
        cd $GITHUB_WORKSPACE
        for pkg in solana-oasis-node solana-oasis-sdk solana-oasis-bridge; do
          cargo package -p ${pkg}
          cargo publish -p ${pkg} --registry github --no-verify --allow-dirty || true
        done
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }} 